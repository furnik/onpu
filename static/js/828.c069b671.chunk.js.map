{"version":3,"file":"static/js/828.c069b671.chunk.js","mappings":"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","sources":["components/Admin/Form/index.tsx","types/admin.ts","queries/type.ts","components/Admin/Form/UpdateForm.tsx","hooks/common.ts","components/Admin/List/index.tsx","components/Admin/Type/index.tsx","queries/tag.ts","components/Admin/Tag/index.tsx","queries/speciality.ts","components/Admin/Speciality/index.tsx","components/Admin/Project/index.tsx","components/Admin/index.tsx","components/Admin/styles.ts","ui-kit/Input/index.tsx"],"sourcesContent":["import React, {PropsWithChildren} from 'react';\r\nimport {FixedWrapper, GlobalStyles, FormWrapper, CloseBtnWrapper} from '../styles';\r\nimport {CloseBtn} from '../../../ui-kit/Button/Close';\r\n\r\ninterface FormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport const Form: React.FC<PropsWithChildren<FormProps>> = ({onClose, children}) => {\r\n\treturn (\r\n\t\t<FixedWrapper>\r\n\t\t\t<GlobalStyles />\r\n\t\t\t<FormWrapper>\r\n\t\t\t\t<CloseBtnWrapper>\r\n\t\t\t\t\t<CloseBtn onClick={onClose} />\r\n\t\t\t\t</CloseBtnWrapper>\r\n\t\t\t\t{children}\r\n\t\t\t</FormWrapper>\r\n\t\t</FixedWrapper>\r\n\t);\r\n};\r\n","export enum Tabs {\r\n  types = 'types',\r\n  tags = 'tags',\r\n  speciality = 'speciality',\r\n  projects = 'projects',\r\n}\r\n","import {gql} from '@apollo/client';\r\n\r\nexport const CreateTypeQuery = gql`\r\n  mutation createType($en: String!, $ua: String!) {\r\n    createType(input: {en: $en, ua: $ua}) {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\nexport const UpdateTypeQuery = gql`\r\n  mutation updateType($id: ID!, $en: String!, $ua: String!) {\r\n    updateType(input: {id: $id, en: $en, ua: $ua}) {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\nexport const DeleteTypeQuery = gql`\r\n  mutation deleteType($id: ID!) {\r\n    deleteType(input: {id: $id})\r\n  }\r\n`;\r\nexport const GetTypeQuery = gql`\r\n   query getTypes {\r\n    getTypes {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {Input} from '../../../ui-kit/Input';\r\nimport {Form} from './index';\r\nimport {Button} from '../../../ui-kit/Button';\r\n\r\ninterface FormProps {\r\n  onClose: () => void;\r\n  onChange: (field: string) => (value: string) => void;\r\n  onSubmit: () => void;\r\n\tdata: {en: string; ua: string};\r\n}\r\n\r\nexport const UpdateForm: React.FC<FormProps> = ({onClose, onChange, onSubmit, data}) => {\r\n\treturn (\r\n\t\t<Form onClose={onClose}>\r\n\t\t\t<Input value={data.en} placeholder=\"en\" onChange={onChange('en')} />\r\n\t\t\t<Input value={data.ua} placeholder=\"ua\" onChange={onChange('ua')} />\r\n\t\t\t<Button onClick={onSubmit} variant=\"primary\">Submit</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n","import {DocumentNode, TypedDocumentNode, useMutation, useQuery} from '@apollo/client';\r\nimport {useState} from 'react';\r\nimport {CommonValueT} from '../types/common';\r\n\r\nconst initialValue = {en: '', ua: ''};\r\n\r\nexport interface CommonI {\r\n\tgetQuery: DocumentNode | TypedDocumentNode;\r\n\tcreateQuery: DocumentNode | TypedDocumentNode;\r\n\tupdateQuery: DocumentNode | TypedDocumentNode;\r\n\tremoveQuery: DocumentNode | TypedDocumentNode;\r\n\ttype: string;\r\n}\r\n\r\nexport const useCommon = ({getQuery, createQuery, updateQuery, removeQuery, type}: CommonI) => {\r\n\tconst [values, setValues] = useState<CommonValueT>(initialValue);\r\n\tconst {data, refetch} = useQuery(getQuery);\r\n\tconst [create] = useMutation(createQuery);\r\n\tconst [update] = useMutation(updateQuery);\r\n\tconst [remove] = useMutation(removeQuery);\r\n\r\n\tconst onChange = (field: string) => (value: string) => {\r\n\t\tsetValues((prev) => ({...prev, [field]: value}));\r\n\t};\r\n\r\n\tconst onCreate = async (callback: () => void) => {\r\n\t\ttry {\r\n\t\t\tconst createData = await create({variables: values});\r\n\t\t\tif (createData) {\r\n\t\t\t\trefetch();\r\n\t\t\t\tsetValues(initialValue);\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onUpdate = async (id: string, callback: () => void) => {\r\n\t\ttry {\r\n\t\t\tconst updateData = await update({variables: {id, ...values}});\r\n\t\t\tif (updateData) {\r\n\t\t\t\trefetch();\r\n\t\t\t\tsetValues(initialValue);\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onDelete = async (id: string) => {\r\n\t\ttry {\r\n\t\t\tconst removeData = await remove({variables: {id}});\r\n\t\t\tif (removeData) {\r\n\t\t\t\trefetch();\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\trefetch();\r\n\t\t}\r\n\t};\r\n\r\n\treturn {data: data ? data[type] : [], values, onChange, onCreate, onUpdate, onDelete, setValues};\r\n};\r\n","import React, {useState, lazy, Suspense} from 'react';\r\nimport {List, ListItem, ContentWrapper, BlockWrapper} from '../styles';\r\nimport {Typography} from '../../../ui-kit/Text';\r\nimport {Button} from '../../../ui-kit/Button';\r\nimport {UpdateForm} from '../Form/UpdateForm';\r\nimport {CommonT} from '../../../types/common';\r\nimport {CommonI, useCommon} from '../../../hooks/common';\r\nconst AddForm = lazy(() => import('../Form/AddForm'));\r\n\r\nexport const ListComponent: React.FC<CommonI> = ({getQuery, createQuery, updateQuery, removeQuery, type}) => {\r\n\tconst [active, setActive] = useState({create: false, update: false});\r\n\tconst {data, onDelete, onChange, onCreate, onUpdate, values, setValues} = useCommon({getQuery, createQuery, updateQuery, removeQuery, type});\r\n\r\n\tconst onClose = (field: string) => () => {\r\n\t\tsetActive((prev) => ({...prev, [field]: false}));\r\n\t};\r\n\r\n\tconst onShow = (field: string, data?: CommonT) => () => {\r\n\t\tif (field === 'update' && data) {\r\n\t\t\tsetValues(data);\r\n\t\t}\r\n\t\tsetActive((prev) => ({...prev, [field]: true}));\r\n\t};\r\n\r\n\tconst createHandler = () => {\r\n\t\tonCreate(onClose('create'));\r\n\t};\r\n\r\n\tconst updateHandler = (id: string) => () => {\r\n\t\tonUpdate(id, onClose('update'));\r\n\t};\r\n\r\n\tconst deleteHandler = (id: string) => () => {\r\n\t\tonDelete(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t<Suspense>\r\n\t\t\t\t{active.create && <AddForm onSubmit={createHandler} onChange={onChange} onClose={onClose('create')} />}\r\n\t\t\t</Suspense>\r\n\t\t\t<Button onClick={onShow('create')} width={100} variant=\"primary\">Create</Button>\r\n\t\t\t{data?.map((item: CommonT) => (\r\n\t\t\t\t<ListItem key={item.id}>\r\n\t\t\t\t\t{active.update && <UpdateForm data={values} onSubmit={updateHandler(item.id)} onChange={onChange} onClose={onClose('update')} />}\r\n\t\t\t\t\t<BlockWrapper>\r\n\t\t\t\t\t\t<Typography variant=\"h3\" color=\"dark\">EN: {item.en}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h3\" color=\"dark\">UA: {item.ua}</Typography>\r\n\t\t\t\t\t</BlockWrapper>\r\n\t\t\t\t\t<ContentWrapper>\r\n\t\t\t\t\t\t<Button onClick={onShow('update', item)} width={100} variant=\"primary\">Update</Button>\r\n\t\t\t\t\t\t<Button onClick={deleteHandler(item.id)} width={100} variant=\"primary\">Delete</Button>\r\n\t\t\t\t\t</ContentWrapper>\r\n\t\t\t\t</ListItem>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport {CreateTypeQuery, DeleteTypeQuery, GetTypeQuery, UpdateTypeQuery} from '../../../queries/type';\r\nimport {ListComponent} from '../List';\r\n\r\nexport const Type: React.FC = () => {\r\n\treturn <ListComponent type=\"getTypes\" getQuery={GetTypeQuery} createQuery={CreateTypeQuery} updateQuery={UpdateTypeQuery} removeQuery={DeleteTypeQuery} />;\r\n};\r\n","import {gql} from '@apollo/client';\r\n\r\nexport const CreateTagQuery = gql`\r\n  mutation createTag($en: String!, $ua: String!) {\r\n    createTag(input: {en: $en, ua: $ua}) {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\nexport const UpdateTagQuery = gql`\r\n  mutation updateTag($id: ID!, $en: String!, $ua: String!) {\r\n    updateTag(input: {id: $id, en: $en, ua: $ua}) {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\nexport const DeleteTagQuery = gql`\r\n  mutation deleteTag($id: ID!) {\r\n    deleteTag(input: {id: $id})\r\n  }\r\n`;\r\nexport const GetTagQuery = gql`\r\n   query getTags {\r\n    getTags {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {ListComponent} from '../List';\r\nimport {GetTagQuery, UpdateTagQuery, CreateTagQuery, DeleteTagQuery} from '../../../queries/tag';\r\n\r\nexport const Tag: React.FC = () => {\r\n\treturn <ListComponent getQuery={GetTagQuery} createQuery={CreateTagQuery} updateQuery={UpdateTagQuery} removeQuery={DeleteTagQuery} type={'getTags'} />;\r\n};\r\n","import {gql} from '@apollo/client';\r\n\r\nexport const CreateSpecialityQuery = gql`\r\n  mutation createSpeciality($en: String!, $ua: String!) {\r\n    createSpeciality(input: {en: $en, ua: $ua}) {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\nexport const UpdateSpecialityQuery = gql`\r\n  mutation updateSpeciality($id: ID!, $en: String!, $ua: String!) {\r\n    updateSpeciality(input: {id: $id, en: $en, ua: $ua}) {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\nexport const DeleteSpecialityQuery = gql`\r\n  mutation deleteSpeciality($id: ID!) {\r\n    deleteSpeciality(input: {id: $id})\r\n  }\r\n`;\r\nexport const GetSpecialityQuery = gql`\r\n   query getSpecialities {\r\n    getSpecialities {\r\n      id\r\n      en\r\n      ua\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {ListComponent} from '../List';\r\nimport {GetSpecialityQuery, UpdateSpecialityQuery, DeleteSpecialityQuery, CreateSpecialityQuery} from '../../../queries/speciality';\r\n\r\nexport const Speciality: React.FC = () => {\r\n\treturn <ListComponent type=\"getSpecialities\" getQuery={GetSpecialityQuery} createQuery={CreateSpecialityQuery} removeQuery={DeleteSpecialityQuery} updateQuery={UpdateSpecialityQuery} />;\r\n};\r\n","import React from 'react';\r\n\r\nexport const Project: React.FC = () => {\r\n\treturn <div>project</div>;\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Tabs} from '../../types/admin';\r\nimport {TabsWrapper, Wrapper} from './styles';\r\nimport {Container} from '../../ui-kit/Container';\r\nimport {Button} from '../../ui-kit/Button';\r\nimport {Typography} from '../../ui-kit/Text';\r\nimport {Type} from './Type';\r\nimport {Tag} from './Tag';\r\nimport {Speciality} from './Speciality';\r\nimport {Project} from './Project';\r\n\r\nconst tabs = [Tabs.types, Tabs.tags, Tabs.speciality, Tabs.projects];\r\n\r\nconst Admin: React.FC = () => {\r\n\tconst [tab, setTab] = useState(Tabs.types);\r\n\r\n\tconst changeTabHandler = (value: Tabs) => () => {\r\n\t\tsetTab(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container $direction=\"row\">\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<Typography sizeT={30} variant=\"h1\" weight=\"semi-bold\" color=\"white\">{tab.toUpperCase()}</Typography>\r\n\t\t\t\t<TabsWrapper>\r\n\t\t\t\t\t{tabs.map((item) => <Button onClick={changeTabHandler(item)} variant={tab === item ? 'primary' : 'secondary'} width={140} key={item}>{item.toUpperCase()}</Button>)}\r\n\t\t\t\t</TabsWrapper>\r\n\t\t\t\t{tab === Tabs.types && <Type />}\r\n\t\t\t\t{tab === Tabs.tags && <Tag />}\r\n\t\t\t\t{tab === Tabs.speciality && <Speciality />}\r\n\t\t\t\t{tab === Tabs.projects && <Project />}\r\n\t\t\t</Wrapper>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Admin;\r\n","import styled, {createGlobalStyle} from 'styled-components';\r\nimport {Media} from '../../ui-kit/theme/breakpoints';\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const TabsWrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n  padding-bottom: 20px;\r\n  ::-webkit-scrollbar {\r\n    height: 4px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: ${(props) => props.theme.blue_2};\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${(props) => props.theme.blue_1};\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  background: ${(props) => props.theme.white};\r\n  ${Media.down.m} {\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  ${Media.down.m} {\r\n    width: 100%;\r\n    button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BlockWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const FixedWrapper = styled.article`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background: ${(props) => props.theme.dark_4};\r\n  backdrop-filter: blur(8px);\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 40px 50px;\r\n  margin: 40px auto;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background: ${(props) => props.theme.white};\r\n  box-shadow: 0 20px 24px -4px rgba(16, 24, 40, 0.08), 0px 8px 8px -4px rgba(16, 24, 40, 0.03);\r\n  border-radius: 12px;\r\n  position: relative;\r\n  ${Media.down.m} {\r\n    padding: 40px 30px;\r\n  }\r\n`;\r\n\r\nexport const CloseBtnWrapper = styled.div`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 20px;\r\n`;\r\n","import React, {useRef} from 'react';\r\nimport {StyledInput, Label, ErrorText} from './styles';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  onChange: (value: string) => void;\r\n\tvalue?: string;\r\n\terror?: string;\r\n}\r\n\r\nexport const Input: React.FC<Props> = ({placeholder, onChange, error, value}) => {\r\n\tconst ref = useRef(null);\r\n\treturn (\r\n\t\t<Label>\r\n\t\t\t<StyledInput $error={!!error} ref={ref} value={value} onChange={(elem) => onChange(elem.target.value)} type=\"text\" placeholder={placeholder} />\r\n\t\t\t{!!error && <ErrorText>{error}</ErrorText>}\r\n\t\t</Label>\r\n\t);\r\n};\r\n"],"names":["Form","_ref","onClose","children","_jsxs","FixedWrapper","_jsx","GlobalStyles","FormWrapper","CloseBtnWrapper","CloseBtn","onClick","Tabs","CreateTypeQuery","gql","_templateObject","_taggedTemplateLiteral","UpdateTypeQuery","_templateObject2","DeleteTypeQuery","_templateObject3","GetTypeQuery","_templateObject4","UpdateForm","onChange","onSubmit","data","Input","value","en","placeholder","ua","Button","variant","initialValue","AddForm","lazy","ListComponent","getQuery","createQuery","updateQuery","removeQuery","type","_useState","useState","create","update","_useState2","_slicedToArray","active","setActive","_useCommon","values","setValues","_useQuery","useQuery","refetch","_useMutation","useMutation","_useMutation3","_useMutation5","remove","onCreate","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","callback","wrap","_context","prev","next","variables","sent","t0","console","log","stop","_x","apply","arguments","onUpdate","_ref3","_callee2","id","_context2","_objectSpread","_x2","_x3","onDelete","_ref4","_callee3","_context3","_x4","field","_defineProperty","useCommon","onShow","deleteHandler","List","Suspense","width","map","item","ListItem","BlockWrapper","Typography","color","ContentWrapper","Type","CreateTagQuery","UpdateTagQuery","DeleteTagQuery","GetTagQuery","Tag","CreateSpecialityQuery","UpdateSpecialityQuery","DeleteSpecialityQuery","GetSpecialityQuery","Speciality","Project","tabs","types","tags","speciality","projects","tab","setTab","Container","$direction","Wrapper","sizeT","weight","toUpperCase","TabsWrapper","styled","props","theme","blue_2","blue_1","white","Media","_templateObject5","_templateObject6","createGlobalStyle","_templateObject7","_templateObject8","dark_4","_templateObject9","_templateObject10","error","ref","useRef","Label","StyledInput","$error","elem","target","ErrorText"],"sourceRoot":""}