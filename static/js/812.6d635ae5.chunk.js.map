{"version":3,"file":"static/js/812.6d635ae5.chunk.js","mappings":"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","sources":["components/Add/Form/styles.ts","components/Add/Form/index.tsx","ui-kit/Input/index.tsx"],"sourcesContent":["import styled, {createGlobalStyle} from 'styled-components';\r\nimport {Media} from '../../../ui-kit/theme/breakpoints';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.article`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background: ${(props) => props.theme.dark_4};\r\n  backdrop-filter: blur(8px);\r\n`;\r\n\r\nexport const FormWrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 40px 50px;\r\n  margin: 40px auto;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background: ${(props) => props.theme.white};\r\n  box-shadow: 0 20px 24px -4px rgba(16, 24, 40, 0.08), 0px 8px 8px -4px rgba(16, 24, 40, 0.03);\r\n  border-radius: 12px;\r\n  position: relative;\r\n  ${Media.down.m} {\r\n    padding: 40px 30px;\r\n  }\r\n`;\r\n\r\nexport const CloseBtnWrapper = styled.div`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 20px;\r\n`;\r\n","import React, {MouseEventHandler} from 'react';\r\nimport {Wrapper, GlobalStyles, FormWrapper, CloseBtnWrapper} from './styles';\r\nimport {CloseBtn} from '../../../ui-kit/Button/Close';\r\nimport {Typography} from '../../../ui-kit/Text';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Input} from '../../../ui-kit/Input';\r\nimport {Select} from '../../../ui-kit/Select';\r\n\r\ninterface FormProps {\r\n\tonClose: () => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = ({onClose}) => {\r\n\tconst {t} = useTranslation();\r\n\tconst onClick: MouseEventHandler<HTMLFormElement> = (event) => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<GlobalStyles />\r\n\t\t\t<FormWrapper onClick={onClick}>\r\n\t\t\t\t<CloseBtnWrapper>\r\n\t\t\t\t\t<CloseBtn onClick={onClose} />\r\n\t\t\t\t</CloseBtnWrapper>\r\n\t\t\t\t<Typography textAlign=\"center\" variant=\"h4\" weight=\"medium\" color=\"dark\">{t('add:form.formTitle')}</Typography>\r\n\t\t\t\t<Input placeholder={t('add:form.title')} onChange={() => console.log('ok')} />\r\n\t\t\t\t<Input placeholder={t('add:form.description')} onChange={() => console.log('ok')} />\r\n\t\t\t\t<Input placeholder={t('add:form.author')} onChange={() => console.log('ok')} />\r\n\t\t\t\t<Input placeholder={t('add:form.manager')} onChange={() => console.log('ok')} />\r\n\t\t\t\t<Input placeholder={t('add:form.year')} onChange={() => console.log('ok')} />\r\n\t\t\t\t<Select placeholder={t('add:form.type')} onChange={() => console.log('ok')} values={[]} />\r\n\t\t\t\t<Select placeholder={t('add:form.speciality')} onChange={() => console.log('ok')} values={[]} />\r\n\t\t\t\t<Select placeholder={t('add:form.technology')} onChange={() => console.log('ok')} values={[]} />\r\n\t\t\t\t<Input placeholder={t('add:form.link')} onChange={() => console.log('ok')} />\r\n\t\t\t</FormWrapper>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React, {useRef} from 'react';\r\nimport {StyledInput, Label, ErrorText} from './styles';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  onChange: (value: string) => void;\r\n\tvalue?: string;\r\n\terror?: string;\r\n}\r\n\r\nexport const Input: React.FC<Props> = ({placeholder, onChange, error, value}) => {\r\n\tconst ref = useRef(null);\r\n\treturn (\r\n\t\t<Label>\r\n\t\t\t<StyledInput $error={!!error} ref={ref} value={value} onChange={(elem) => onChange(elem.target.value)} type=\"text\" placeholder={placeholder} />\r\n\t\t\t{!!error && <ErrorText>{error}</ErrorText>}\r\n\t\t</Label>\r\n\t);\r\n};\r\n"],"names":["GlobalStyles","createGlobalStyle","_templateObject","_taggedTemplateLiteral","Wrapper","styled","_templateObject2","props","theme","dark_4","FormWrapper","_templateObject3","white","Media","CloseBtnWrapper","_templateObject4","_ref","onClose","t","useTranslation","_jsxs","children","_jsx","onClick","event","preventDefault","CloseBtn","Typography","textAlign","variant","weight","color","Input","placeholder","onChange","console","log","Select","values","error","value","ref","useRef","Label","StyledInput","$error","elem","target","type","ErrorText"],"sourceRoot":""}