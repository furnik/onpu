{"version":3,"file":"static/js/923.28cfde14.chunk.js","mappings":"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","sources":["components/Admin/Form/index.tsx","types/admin.ts","components/Admin/Form/UpdateForm.tsx","hooks/common.ts","components/Admin/List/index.tsx","components/Admin/Type/index.tsx","components/Admin/Tag/index.tsx","components/Admin/Speciality/index.tsx","components/Admin/Project/Form/index.tsx","components/Admin/Project/index.tsx","components/Admin/index.tsx","components/Admin/styles.ts"],"sourcesContent":["import React, {PropsWithChildren} from 'react';\r\nimport {FixedWrapper, GlobalStyles, FormWrapper, CloseBtnWrapper} from '../styles';\r\nimport {CloseBtn} from '../../../ui-kit/Button/Close';\r\n\r\ninterface FormProps {\r\n  onClose: () => void;\r\n}\r\n\r\n//Компонент обгортки форм створення та редагування, що робить модальне вікно\r\n\r\nexport const Form: React.FC<PropsWithChildren<FormProps>> = ({onClose, children}) => {\r\n\treturn (\r\n\t\t<FixedWrapper>\r\n\t\t\t<GlobalStyles />\r\n\t\t\t<FormWrapper>\r\n\t\t\t\t<CloseBtnWrapper>\r\n\t\t\t\t\t<CloseBtn onClick={onClose} />\r\n\t\t\t\t</CloseBtnWrapper>\r\n\t\t\t\t{children}\r\n\t\t\t</FormWrapper>\r\n\t\t</FixedWrapper>\r\n\t);\r\n};\r\n","export enum Tabs {\r\n  types = 'admin:types',\r\n  tags = 'admin:tags',\r\n  speciality = 'admin:specialities',\r\n  projects = 'admin:projects',\r\n}\r\n","import React from 'react';\r\nimport {Input} from '../../../ui-kit/Input';\r\nimport {Form} from './index';\r\nimport {Button} from '../../../ui-kit/Button';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\ninterface FormProps {\r\n  onClose: () => void;\r\n  onChange: (field: string) => (value: string) => void;\r\n  onSubmit: () => void;\r\n\tdata: {en: string; ua: string};\r\n}\r\n\r\n//Компонент форми редагування типів, спеціальностей та технологій\r\n\r\nexport const UpdateForm: React.FC<FormProps> = ({onClose, onChange, onSubmit, data}) => {\r\n\tconst {t} = useTranslation();\r\n\treturn (\r\n\t\t<Form onClose={onClose}>\r\n\t\t\t<Input value={data.en} placeholder=\"en\" onChange={onChange('en')} />\r\n\t\t\t<Input value={data.ua} placeholder=\"ua\" onChange={onChange('ua')} />\r\n\t\t\t<Button onClick={onSubmit} variant=\"primary\">{t('admin:button.submit')}</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n","import {DocumentNode, TypedDocumentNode, useMutation, useQuery} from '@apollo/client';\r\nimport {useState} from 'react';\r\nimport {CommonValueT} from '../types/common';\r\n\r\nconst initialValue = {en: '', ua: ''};\r\n\r\nexport interface CommonI {\r\n\tgetQuery: DocumentNode | TypedDocumentNode;\r\n\tcreateQuery: DocumentNode | TypedDocumentNode;\r\n\tupdateQuery: DocumentNode | TypedDocumentNode;\r\n\tremoveQuery: DocumentNode | TypedDocumentNode;\r\n\ttype: string;\r\n}\r\n\r\n//Хук для отримання\\редагування\\створення та видалення єлементів списку на сторінці адмінісиратора\r\n\r\nexport const useCommon = ({getQuery, createQuery, updateQuery, removeQuery, type}: CommonI) => {\r\n\tconst [values, setValues] = useState<CommonValueT>(initialValue);\r\n\tconst {data, refetch} = useQuery(getQuery);\r\n\tconst [create] = useMutation(createQuery);\r\n\tconst [update] = useMutation(updateQuery);\r\n\tconst [remove] = useMutation(removeQuery);\r\n\r\n\tconst onChange = (field: string) => (value: string) => {\r\n\t\tsetValues((prev) => ({...prev, [field]: value}));\r\n\t};\r\n\r\n\tconst onCreate = async (callback: () => void) => {\r\n\t\ttry {\r\n\t\t\tconst createData = await create({variables: values});\r\n\t\t\tif (createData) {\r\n\t\t\t\trefetch();\r\n\t\t\t\tsetValues(initialValue);\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onUpdate = async (id: string, callback: () => void) => {\r\n\t\ttry {\r\n\t\t\tconst updateData = await update({variables: {id, ...values}});\r\n\t\t\tif (updateData) {\r\n\t\t\t\trefetch();\r\n\t\t\t\tsetValues(initialValue);\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onDelete = async (id: string) => {\r\n\t\ttry {\r\n\t\t\tconst removeData = await remove({variables: {id}});\r\n\t\t\tif (removeData) {\r\n\t\t\t\trefetch();\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn {data: data ? data[type] : [], values, onChange, onCreate, onUpdate, onDelete, setValues};\r\n};\r\n","import React, {useState, lazy, Suspense} from 'react';\r\nimport {List, ListItem, ContentWrapper, BlockWrapper} from '../styles';\r\nimport {Typography} from '../../../ui-kit/Text';\r\nimport {Button} from '../../../ui-kit/Button';\r\nimport {UpdateForm} from '../Form/UpdateForm';\r\nimport {CommonT} from '../../../types/common';\r\nimport {CommonI, useCommon} from '../../../hooks/common';\r\nimport {useTranslation} from 'react-i18next';\r\nconst AddForm = lazy(() => import('../Form/AddForm'));\r\n\r\n//Компонент списку типів, спеціальностей та технологій\r\n\r\nexport const ListComponent: React.FC<CommonI> = ({getQuery, createQuery, updateQuery, removeQuery, type}) => {\r\n\tconst {t} = useTranslation();\r\n\tconst [active, setActive] = useState({create: false, update: false});\r\n\tconst {data, onDelete, onChange, onCreate, onUpdate, values, setValues} = useCommon({getQuery, createQuery, updateQuery, removeQuery, type});\r\n\r\n\t//Функція для закриття модального вікна\r\n\tconst onClose = (field: string) => () => {\r\n\t\tsetActive((prev) => ({...prev, [field]: false}));\r\n\t};\r\n\r\n\t//Функція для показу модального вікна\r\n\tconst onShow = (field: string, data?: CommonT) => () => {\r\n\t\tif (field === 'update' && data) {\r\n\t\t\tsetValues(data);\r\n\t\t}\r\n\t\tsetActive((prev) => ({...prev, [field]: true}));\r\n\t};\r\n\r\n\t//Функція обгортка для створення\r\n\tconst createHandler = () => {\r\n\t\tonCreate(onClose('create'));\r\n\t};\r\n\r\n\t//Функція обгортка для редагування\r\n\tconst updateHandler = (id: string) => () => {\r\n\t\tonUpdate(id, onClose('update'));\r\n\t};\r\n\r\n\t//Функція обгортка для видалення\r\n\tconst deleteHandler = (id: string) => () => {\r\n\t\tonDelete(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t<Suspense>\r\n\t\t\t\t{active.create && <AddForm onSubmit={createHandler} onChange={onChange} onClose={onClose('create')} />}\r\n\t\t\t</Suspense>\r\n\t\t\t<Button onClick={onShow('create')} width={140} variant=\"primary\">{t('admin:button.create')}</Button>\r\n\t\t\t{data?.map((item: CommonT) => (\r\n\t\t\t\t<ListItem key={item.id}>\r\n\t\t\t\t\t{active.update && <UpdateForm data={values} onSubmit={updateHandler(item.id)} onChange={onChange} onClose={onClose('update')} />}\r\n\t\t\t\t\t<BlockWrapper>\r\n\t\t\t\t\t\t<Typography variant=\"h3\" color=\"dark\">EN: {item.en}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h3\" color=\"dark\">UA: {item.ua}</Typography>\r\n\t\t\t\t\t</BlockWrapper>\r\n\t\t\t\t\t<ContentWrapper>\r\n\t\t\t\t\t\t<Button onClick={onShow('update', item)} width={140} variant=\"primary\">{t('admin:button.update')}</Button>\r\n\t\t\t\t\t\t<Button onClick={deleteHandler(item.id)} width={140} variant=\"primary\">{t('admin:button.delete')}</Button>\r\n\t\t\t\t\t</ContentWrapper>\r\n\t\t\t\t</ListItem>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport {CreateTypeQuery, DeleteTypeQuery, GetTypeQuery, UpdateTypeQuery} from '../../../queries/type';\r\nimport {ListComponent} from '../List';\r\n\r\n//Компонент для виводу списку типів додатку\r\n\r\nexport const Type: React.FC = () => {\r\n\treturn <ListComponent type=\"getTypes\" getQuery={GetTypeQuery} createQuery={CreateTypeQuery} updateQuery={UpdateTypeQuery} removeQuery={DeleteTypeQuery} />;\r\n};\r\n","import React from 'react';\r\nimport {ListComponent} from '../List';\r\nimport {GetTagQuery, UpdateTagQuery, CreateTagQuery, DeleteTagQuery} from '../../../queries/tag';\r\n\r\n//Компонент для виводу списку технологій\r\n\r\nexport const Tag: React.FC = () => {\r\n\treturn <ListComponent getQuery={GetTagQuery} createQuery={CreateTagQuery} updateQuery={UpdateTagQuery} removeQuery={DeleteTagQuery} type={'getTags'} />;\r\n};\r\n","import React from 'react';\r\nimport {ListComponent} from '../List';\r\nimport {GetSpecialityQuery, UpdateSpecialityQuery, DeleteSpecialityQuery, CreateSpecialityQuery} from '../../../queries/speciality';\r\n\r\n//Компонент для виводу списку спеціальностей\r\n\r\nexport const Speciality: React.FC = () => {\r\n\treturn <ListComponent type=\"getSpecialities\" getQuery={GetSpecialityQuery} createQuery={CreateSpecialityQuery} removeQuery={DeleteSpecialityQuery} updateQuery={UpdateSpecialityQuery} />;\r\n};\r\n","import React from 'react';\r\nimport Form from '../../../Add/Form';\r\nimport {useProject} from '../../../../hooks/project';\r\nimport {TProject} from '../../../../types/project';\r\nimport {ApolloQueryResult} from '@apollo/client';\r\n\r\ninterface FormProps {\r\n\tdata: TProject;\r\n\tonClose: () => void;\r\n\trefetch: () => Promise<ApolloQueryResult<unknown>>;\r\n}\r\n\r\n//Контейнер для визову хука та передавання данних в компонент форми\r\n\r\nconst ProjectForm: React.FC<FormProps> = ({data, onClose, refetch}) => {\r\n\tconst {error, tags, types, values, specialities, onChange, onItemAdd, onItemRemove, onSubmit, onClear} = useProject(data, refetch);\r\n\treturn <Form onClear={onClear} error={error} onSubmit={onSubmit} onItemRemove={onItemRemove} onItemAdd={onItemAdd} tags={tags} types={types} values={values} specialities={specialities} onChange={onChange} onClose={onClose} />;\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React, {useState} from 'react';\r\nimport {List, RowWrapper, BlockWrapper} from '../styles';\r\nimport {useAdminProject} from '../../../hooks/project';\r\nimport {TProject} from '../../../types/project';\r\nimport {Card} from '../../Catalog/Card';\r\nimport {Button} from '../../../ui-kit/Button';\r\nimport {useTranslation} from 'react-i18next';\r\nimport ProjectForm from './Form';\r\n\r\n//Компонент списку проєктів\r\n\r\nexport const Project: React.FC = () => {\r\n\tconst [active, setActive] = useState(false);\r\n\tconst {t} = useTranslation();\r\n\tconst {data, onDelete, onApprove, refetch} = useAdminProject();\r\n\r\n\t//Функція для показу модального вікна\r\n\tconst changeActiveHandler = () => {\r\n\t\tsetActive(!active);\r\n\t};\r\n\r\n\t//Функція обгортка для видалення\r\n\tconst deleteHandler = (id: string) => () => {\r\n\t\tonDelete(id);\r\n\t};\r\n\r\n\t//Функція обгортка для підтведження\r\n\tconst approveHandler = (project: TProject) => () => {\r\n\t\tonApprove(project);\r\n\t};\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{data.map((project: TProject) => (\r\n\t\t\t\t<RowWrapper $project key={project.id}>\r\n\t\t\t\t\t{active && <ProjectForm refetch={refetch} data={project} onClose={changeActiveHandler} />}\r\n\t\t\t\t\t<Card {...project} />\r\n\t\t\t\t\t<BlockWrapper $project>\r\n\t\t\t\t\t\t{project.status === 'pending' && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Button onClick={approveHandler(project)} width={140} variant=\"primary\">{t('admin:button.approve')}</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={deleteHandler(project.id)} width={140} variant=\"primary\">{t('admin:button.reject')}</Button>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Button onClick={changeActiveHandler} width={140} variant=\"primary\">{t('admin:button.update')}</Button>\r\n\t\t\t\t\t\t<Button onClick={deleteHandler(project.id)} width={140} variant=\"primary\">{t('admin:button.delete')}</Button>\r\n\t\t\t\t\t</BlockWrapper>\r\n\t\t\t\t</RowWrapper>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Tabs} from '../../types/admin';\r\nimport {TabsWrapper, Wrapper, RowWrapper, SwitcherWrapper} from './styles';\r\nimport {Container} from '../../ui-kit/Container';\r\nimport {Button} from '../../ui-kit/Button';\r\nimport {Typography} from '../../ui-kit/Text';\r\nimport {Type} from './Type';\r\nimport {Tag} from './Tag';\r\nimport {Speciality} from './Speciality';\r\nimport {Project} from './Project';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Switcher} from '../Layout/Header/Switcher';\r\n\r\nconst tabs = [Tabs.types, Tabs.tags, Tabs.speciality, Tabs.projects];\r\n\r\n//Сторінка адміністратора\r\n\r\nconst Admin: React.FC = () => {\r\n\tconst {t} = useTranslation();\r\n\tconst [tab, setTab] = useState(Tabs.types);\r\n\r\n\t//Функція для зміни відображення активного списку\r\n\tconst changeTabHandler = (value: Tabs) => () => {\r\n\t\tsetTab(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container $direction=\"row\">\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<RowWrapper>\r\n\t\t\t\t\t<Typography sizeT={30} variant=\"h1\" weight=\"semi-bold\" color=\"white\">{t(tab)}</Typography>\r\n\t\t\t\t\t<SwitcherWrapper>\r\n\t\t\t\t\t\t<Switcher />\r\n\t\t\t\t\t</SwitcherWrapper>\r\n\t\t\t\t</RowWrapper>\r\n\t\t\t\t<TabsWrapper>\r\n\t\t\t\t\t{tabs.map((item) => <Button onClick={changeTabHandler(item)} variant={tab === item ? 'primary' : 'secondary'} width={180} key={item}>{t(item)}</Button>)}\r\n\t\t\t\t</TabsWrapper>\r\n\t\t\t\t{tab === Tabs.types && <Type />}\r\n\t\t\t\t{tab === Tabs.tags && <Tag />}\r\n\t\t\t\t{tab === Tabs.speciality && <Speciality />}\r\n\t\t\t\t{tab === Tabs.projects && <Project />}\r\n\t\t\t</Wrapper>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Admin;\r\n","import styled, {createGlobalStyle} from 'styled-components';\r\nimport {Media} from '../../ui-kit/theme/breakpoints';\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const RowWrapper = styled.div<{$project?: boolean}>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  width: 100%;\r\n  ${Media.down.m} {\r\n    flex-direction: ${({$project}) => ($project ? 'column' : 'row')};\r\n  }\r\n`;\r\n\r\nexport const SwitcherWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  height: max-content;\r\n  background: ${(props) => props.theme.white};\r\n`;\r\n\r\nexport const TabsWrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n  padding-bottom: 20px;\r\n  ::-webkit-scrollbar {\r\n    height: 4px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: ${(props) => props.theme.blue_2};\r\n    border-radius: 4px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${(props) => props.theme.blue_1};\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  background: ${(props) => props.theme.white};\r\n  ${Media.down.m} {\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\nflex-wrap: wrap;\r\n  gap: 10px;\r\n  ${Media.down.m} {\r\n    width: 100%;\r\n    button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BlockWrapper = styled.div<{$project?: boolean}>`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  ${Media.down.m} {\r\n    flex-direction: ${({$project}) => ($project ? 'row' : 'column')};\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    button {\r\n      width: 45%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const FixedWrapper = styled.article`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background: ${(props) => props.theme.dark_4};\r\n  backdrop-filter: blur(8px);\r\n  z-index: 100;\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 40px 50px;\r\n  margin: 40px auto;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background: ${(props) => props.theme.white};\r\n  box-shadow: 0 20px 24px -4px rgba(16, 24, 40, 0.08), 0px 8px 8px -4px rgba(16, 24, 40, 0.03);\r\n  border-radius: 12px;\r\n  position: relative;\r\n  ${Media.down.m} {\r\n    padding: 40px 30px;\r\n  }\r\n`;\r\n\r\nexport const CloseBtnWrapper = styled.div`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 20px;\r\n`;\r\n"],"names":["Form","_ref","onClose","children","_jsxs","FixedWrapper","_jsx","GlobalStyles","FormWrapper","CloseBtnWrapper","CloseBtn","onClick","Tabs","UpdateForm","onChange","onSubmit","data","t","useTranslation","Input","value","en","placeholder","ua","Button","variant","initialValue","AddForm","lazy","ListComponent","getQuery","createQuery","updateQuery","removeQuery","type","_useState","useState","create","update","_useState2","_slicedToArray","active","setActive","_useCommon","values","setValues","_useQuery","useQuery","refetch","_useMutation","useMutation","_useMutation3","_useMutation5","remove","onCreate","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","callback","wrap","_context","prev","next","variables","sent","t0","console","log","stop","_x","apply","arguments","onUpdate","_ref3","_callee2","id","_context2","_objectSpread","_x2","_x3","onDelete","_ref4","_callee3","_context3","_x4","field","_defineProperty","useCommon","onShow","deleteHandler","List","Suspense","width","map","item","ListItem","BlockWrapper","Typography","color","ContentWrapper","Type","GetTypeQuery","CreateTypeQuery","UpdateTypeQuery","DeleteTypeQuery","Tag","GetTagQuery","CreateTagQuery","UpdateTagQuery","DeleteTagQuery","Speciality","GetSpecialityQuery","CreateSpecialityQuery","DeleteSpecialityQuery","UpdateSpecialityQuery","_useProject","useProject","error","tags","types","specialities","onItemAdd","onItemRemove","onClear","Project","_useAdminProject","useAdminProject","onApprove","changeActiveHandler","approveHandler","project","RowWrapper","$project","ProjectForm","Card","status","_Fragment","tabs","speciality","projects","tab","setTab","Container","$direction","Wrapper","sizeT","weight","SwitcherWrapper","Switcher","TabsWrapper","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Media","_templateObject3","props","theme","white","_templateObject4","blue_2","blue_1","_templateObject5","_templateObject6","_templateObject7","_templateObject8","createGlobalStyle","_templateObject9","_templateObject10","dark_4","_templateObject11","_templateObject12"],"sourceRoot":""}